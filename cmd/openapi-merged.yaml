openapi: 3.1.0
components:
    schemas:
        Cat:
            properties:
                name:
                    type: string
                    description: Name of the pet
                    default: tommy
                    example: rambo
                owner:
                    type: string
                    description: Owner of the pet
                    default: person1
                    example: person1
        Category:
            type: object
            description: Type of the pet
            xml:
                name: category
            properties:
                id:
                    type: number
                    format: int
                    description: Pet ID
                    default: "1"
                    example: "1"
                name:
                    type: string
                    description: Category name for the pets
                    enum:
                        - cat dog
                    default: cat
                    example: dog
        CreatePetRequest:
            xml:
                name: pet-request
            properties:
                category:
                    properties:
                        type:
                            oneOf:
                                - $ref: '#/components/schemas/Cat'
                                - $ref: '#/components/schemas/Horse'
                            type: object
                            description: Animal type
                id:
                    type: number
                    format: int
                    description: Pet ID
                    default: "1"
                    example: "1"
                type:
                    oneOf:
                        - $ref: '#/components/schemas/Cat'
                        - $ref: '#/components/schemas/Dog'
        CreatePetResponse:
            xml:
                name: create-pet
            properties:
                id:
                    type: string
                    format: text
                    description: Returns ID for the per
                    default: 12-sdf-1-321
                    example: 12-sdf-1-321
        Dog:
            properties:
                name:
                    type: string
                    description: Name of the pet
                    default: tommy
                    example: rambo
        Horse:
            properties:
                name:
                    type: string
                    description: Name of the pet
                    default: tommy
                    example: rambo
info:
    title: Sample Spec - OpenAPI 3.1
    description: |4+
        This is a sample Pet Store server based on the OpenAPI 3.1 specification.  You can find out more about \nSwagger at [https://swagger.io](https://swagger.io). In the third iteration of the pet store, we've switched to the design first approach! \nYou can now help us improve the API whether it's by making changes to the definition itself or to the code. \nThat way, with time, we can improve the API in general, and expose some of the new features in OAS3.

        Some useful links:
        - [The Pet Store repository](https://github.com/swagger-api/swagger-petstore)
        - [The source API definition for the Pet Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml)

    version: 1.0.0
paths:
    /pets:
        post:
            tags:
                - pets
            summary: Adds a new pet to the store
            description: Adds a new pet to the store
            operationId: createPet
            parameters:
                - name: name
                  in: query
                  description: Name of pet that needs to be updated
                  schema:
                    type: string
                - name: petId
                  in: path
                  description: ID of pet that needs to be updated
                  required: true
                  schema:
                    type: string
                - name: x-agent-id
                  in: header
                  description: Agent ID for the request
                  required: true
                  schema:
                    type: string
            requestBody:
                description: Request body to create Pets
                content:
                    application/json:
                        schema:
                            xml:
                                name: pet-request
                            properties:
                                category:
                                    properties:
                                        type:
                                            oneOf:
                                                - $ref: '#/components/schemas/Cat'
                                                - $ref: '#/components/schemas/Horse'
                                            type: object
                                            description: Animal type
                                id:
                                    type: number
                                    format: int
                                    description: Pet ID
                                    default: "1"
                                    example: "1"
                                type:
                                    oneOf:
                                        - $ref: '#/components/schemas/Cat'
                                        - $ref: '#/components/schemas/Dog'
                    application/xml:
                        schema:
                            xml:
                                name: pet-request
                            properties:
                                category:
                                    properties:
                                        type:
                                            oneOf:
                                                - $ref: '#/components/schemas/Cat'
                                                - $ref: '#/components/schemas/Horse'
                                            type: object
                                            description: Animal type
                                id:
                                    type: number
                                    format: int
                                    description: Pet ID
                                    default: "1"
                                    example: "1"
                                type:
                                    oneOf:
                                        - $ref: '#/components/schemas/Cat'
                                        - $ref: '#/components/schemas/Dog'
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                xml:
                                    name: create-pet
                                properties:
                                    id:
                                        type: string
                                        format: text
                                        description: Returns ID for the per
                                        default: 12-sdf-1-321
                                        example: 12-sdf-1-321
                        application/xml:
                            schema:
                                xml:
                                    name: create-pet
                                properties:
                                    id:
                                        type: string
                                        format: text
                                        description: Returns ID for the per
                                        default: 12-sdf-1-321
                                        example: 12-sdf-1-321
                "400":
                    description: Error
                    content:
                        application/json: {}
                        application/xml: {}
servers:
    - url: https://localhost:8080
    - url: https://localhost:8081
