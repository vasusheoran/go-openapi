openapi: 3.1.0
components:
    schemas:
        Category:
            type: object
            properties:
                id:
                    type: number
                    format: text
                    description: Pet ID
                    default: "1"
                    example: "1"
                name:
                    type: string
                    format: text
                    description: Category name for the pets
                    enum:
                        - cat
                        - dog
                    default: cat
                    example: dog
        CreatePetRequest:
            type: object
            properties:
                category:
                    $ref: '#/components/schemas/Category'
                id:
                    type: number
                    format: text
                    description: Pet ID
                    default: "1"
                    example: "1"
                name:
                    type: string
                    format: text
                    description: Name of the pet
                    default: tommy
                    example: rambo
        CreatePetResponse:
            type: object
            properties:
                id:
                    type: string
                    format: text
                    description: Returns ID for the per
                    default: 12-sdf-1-321
                    example: 12-sdf-1-321
        ErrorResponse:
            type: object
            properties:
                msg:
                    type: string
                    format: text
                    description: Error message
                    default: 404 not found
                    example: 404 not found
        GetPetByIDResponse:
            type: object
            properties:
                category:
                    $ref: '#/components/schemas/Category'
                name:
                    type: string
                    format: text
                    description: Name of the pet
                    default: tommy
                    example: rambo
        GetPets:
            type: object
            properties:
                pets:
                    type: array
                    format: array
                    description: Returns list of pets
                    items:
                        $ref: '#/components/schemas/GetPetByIDResponse'
info:
    title: Sample Spec - OpenAPI 3.1
    description: |4+
        This is a sample Pet Store Server based on the OpenAPI 3.1 specification.  You can find out more about \nSwagger at [https://swagger.io](https://swagger.io). In the third iteration of the pet store, we've switched to the design first approach! \nYou can now help us improve the API whether it's by making changes to the definition itself or to the code. \nThat way, with time, we can improve the API in general, and expose some of the new features in OAS3.

        Some useful links:
        - [The Pet Store repository](https://github.com/swagger-api/swagger-petstore)
        - [The source API definition for the Pet Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml)

    version: 1.0.0
paths:
    /pets:
        get:
            tags:
                - pet
            summary: Get all pets
            description: Returns list of all pets
            operationId: GetPetByIDOp
            responses:
                "200":
                    description: ""
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetPets'
                "400":
                    description: ""
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
        post:
            tags:
                - pet
            summary: Adds a new pet to the store
            description: Adds a new pet to the store
            operationId: CreatePet
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreatePetRequest'
            responses:
                "200":
                    description: ""
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreatePetResponse'
                "400":
                    description: ""
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
    /pets/{petId}:
        get:
            tags:
                - pet
            summary: Find pet by ID
            description: Returns a single pet
            operationId: GetPetsOp
            parameters:
                - name: name
                  in: query
                  description: '"Name of pet that needs to be updated"'
                  schema:
                    type: string
                - name: petId
                  in: path
                  description: '"ID of pet that needs to be updated"'
                  required: true
                  schema:
                    type: string
                - name: x-agent-id
                  in: header
                  description: '"Agent ID for the request"'
                  required: true
                  schema:
                    type: string
            responses:
                "400":
                    description: ""
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ErrorResponse'
servers:
    - url: localhost:8080
    - url: localhost:8081
tags:
    - name: pet
      description: Everything about your Pets
